{
  "critical_count": 13,
  "warning_count": 38,
  "total_issues": 51,
  "issues": [
    {
      "category": "missing_values",
      "severity": "critical",
      "column": "Cabin",
      "description": "77.1% missing values in 'Cabin'",
      "impact_score": "high",
      "quick_fix": "Options: \n- Drop column: Reduces bias from missing data (Pros: Simplifies model; Cons: Loses potential info).\n- Impute values: Use domain-informed methods (e.g., median, mode, or predictive model) (Pros: Retains feature; Cons: May introduce bias).\n- Create missingness indicator: Flag missing values as a new feature (Pros: Captures missingness pattern; Cons: Adds complexity)."
    },
    {
      "category": "high_cardinality",
      "severity": "critical",
      "column": "Name",
      "description": "Column 'Name' has 891 unique values (100.0% of rows)",
      "impact_score": "high",
      "quick_fix": "Options: \n- Drop column: Avoids overfitting from unique identifiers (Pros: Simplifies model; Cons: Loses potential info).\n- Engineer feature: Extract patterns (e.g., titles from names) (Pros: Retains useful info; Cons: Requires domain knowledge).\n- Use hashing: Reduce dimensionality (Pros: Scalable; Cons: May lose interpretability)."
    },
    {
      "category": "high_cardinality",
      "severity": "warning",
      "column": "Ticket",
      "description": "Column 'Ticket' has 681 unique values (76.4% of rows)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Group rare categories: Reduce cardinality (Pros: Simplifies feature; Cons: May lose nuance).\n- Use feature hashing: Map to lower dimensions (Pros: Scalable; Cons: Less interpretable).\n- Retain and test: Evaluate feature importance (Pros: Data-driven; Cons: Risk of overfitting)."
    },
    {
      "category": "high_cardinality",
      "severity": "warning",
      "column": "Cabin",
      "description": "Column 'Cabin' has 147 unique values (16.5% of rows)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Group rare categories: Reduce cardinality (Pros: Simplifies feature; Cons: May lose nuance).\n- Use feature hashing: Map to lower dimensions (Pros: Scalable; Cons: Less interpretable).\n- Retain and test: Evaluate feature importance (Pros: Data-driven; Cons: Risk of overfitting)."
    },
    {
      "category": "outliers",
      "severity": "warning",
      "column": "SibSp",
      "description": "Column 'SibSp' has 12 potential outliers (1.3% of non-missing values)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Investigate outliers: Verify if valid or errors (Pros: Ensures accuracy; Cons: Time-consuming).\n- Transform: Use log/sqrt to reduce impact (Pros: Retains data; Cons: Changes interpretation).\n- Retain and test: Use robust models (e.g., trees) (Pros: Keeps info; Cons: May affect sensitive models)."
    },
    {
      "category": "outliers",
      "severity": "warning",
      "column": "Parch",
      "description": "Column 'Parch' has 10 potential outliers (1.1% of non-missing values)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Investigate outliers: Verify if valid or errors (Pros: Ensures accuracy; Cons: Time-consuming).\n- Transform: Use log/sqrt to reduce impact (Pros: Retains data; Cons: Changes interpretation).\n- Retain and test: Use robust models (e.g., trees) (Pros: Keeps info; Cons: May affect sensitive models)."
    },
    {
      "category": "outliers",
      "severity": "warning",
      "column": "Fare",
      "description": "Column 'Fare' has 11 potential outliers (1.2% of non-missing values)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Investigate outliers: Verify if valid or errors (Pros: Ensures accuracy; Cons: Time-consuming).\n- Transform: Use log/sqrt to reduce impact (Pros: Retains data; Cons: Changes interpretation).\n- Retain and test: Use robust models (e.g., trees) (Pros: Keeps info; Cons: May affect sensitive models)."
    },
    {
      "category": "feature_correlation",
      "severity": "critical",
      "column": "Name,Sex",
      "description": "Columns 'Name' and 'Sex' are highly associated (Cramer's V: 1.00)",
      "impact_score": "high",
      "quick_fix": "Options: \n- Drop one feature: Avoids overfitting from high redundancy (Pros: Simplifies model; Cons: Loses info).\n- Engineer feature: Extract common patterns (e.g., group categories) (Pros: Retains info; Cons: Requires domain knowledge).\n- Retain and test: Use robust models (e.g., trees) (Pros: Keeps info; Cons: May affect sensitive models)."
    },
    {
      "category": "feature_correlation",
      "severity": "critical",
      "column": "Name,Ticket",
      "description": "Columns 'Name' and 'Ticket' are highly associated (Cramer's V: 1.00)",
      "impact_score": "high",
      "quick_fix": "Options: \n- Drop one feature: Avoids overfitting from high redundancy (Pros: Simplifies model; Cons: Loses info).\n- Engineer feature: Extract common patterns (e.g., group categories) (Pros: Retains info; Cons: Requires domain knowledge).\n- Retain and test: Use robust models (e.g., trees) (Pros: Keeps info; Cons: May affect sensitive models)."
    },
    {
      "category": "feature_correlation",
      "severity": "critical",
      "column": "Name,Cabin",
      "description": "Columns 'Name' and 'Cabin' are highly associated (Cramer's V: 1.00)",
      "impact_score": "high",
      "quick_fix": "Options: \n- Drop one feature: Avoids overfitting from high redundancy (Pros: Simplifies model; Cons: Loses info).\n- Engineer feature: Extract common patterns (e.g., group categories) (Pros: Retains info; Cons: Requires domain knowledge).\n- Retain and test: Use robust models (e.g., trees) (Pros: Keeps info; Cons: May affect sensitive models)."
    },
    {
      "category": "feature_correlation",
      "severity": "critical",
      "column": "Name,Embarked",
      "description": "Columns 'Name' and 'Embarked' are highly associated (Cramer's V: 1.00)",
      "impact_score": "high",
      "quick_fix": "Options: \n- Drop one feature: Avoids overfitting from high redundancy (Pros: Simplifies model; Cons: Loses info).\n- Engineer feature: Extract common patterns (e.g., group categories) (Pros: Retains info; Cons: Requires domain knowledge).\n- Retain and test: Use robust models (e.g., trees) (Pros: Keeps info; Cons: May affect sensitive models)."
    },
    {
      "category": "feature_correlation",
      "severity": "warning",
      "column": "Sex,Ticket",
      "description": "Columns 'Sex' and 'Ticket' are highly associated (Cramer's V: 0.86)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Drop one feature: If less predictive (Pros: Simplifies model; Cons: Loses info).\n- Retain and test: Evaluate with robust models (Pros: Keeps info; Cons: Risk of redundancy).\n- Engineer feature: Group categories or encode differently (Pros: Reduces redundancy; Cons: Adds complexity)."
    },
    {
      "category": "feature_correlation",
      "severity": "warning",
      "column": "Sex,Cabin",
      "description": "Columns 'Sex' and 'Cabin' are highly associated (Cramer's V: 0.86)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Drop one feature: If less predictive (Pros: Simplifies model; Cons: Loses info).\n- Retain and test: Evaluate with robust models (Pros: Keeps info; Cons: Risk of redundancy).\n- Engineer feature: Group categories or encode differently (Pros: Reduces redundancy; Cons: Adds complexity)."
    },
    {
      "category": "feature_correlation",
      "severity": "warning",
      "column": "Ticket,Cabin",
      "description": "Columns 'Ticket' and 'Cabin' are highly associated (Cramer's V: 0.95)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Drop one feature: If less predictive (Pros: Simplifies model; Cons: Loses info).\n- Retain and test: Evaluate with robust models (Pros: Keeps info; Cons: Risk of redundancy).\n- Engineer feature: Group categories or encode differently (Pros: Reduces redundancy; Cons: Adds complexity)."
    },
    {
      "category": "feature_correlation",
      "severity": "critical",
      "column": "Ticket,Embarked",
      "description": "Columns 'Ticket' and 'Embarked' are highly associated (Cramer's V: 1.00)",
      "impact_score": "high",
      "quick_fix": "Options: \n- Drop one feature: Avoids overfitting from high redundancy (Pros: Simplifies model; Cons: Loses info).\n- Engineer feature: Extract common patterns (e.g., group categories) (Pros: Retains info; Cons: Requires domain knowledge).\n- Retain and test: Use robust models (e.g., trees) (Pros: Keeps info; Cons: May affect sensitive models)."
    },
    {
      "category": "feature_correlation",
      "severity": "warning",
      "column": "Cabin,Embarked",
      "description": "Columns 'Cabin' and 'Embarked' are highly associated (Cramer's V: 0.95)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Drop one feature: If less predictive (Pros: Simplifies model; Cons: Loses info).\n- Retain and test: Evaluate with robust models (Pros: Keeps info; Cons: Risk of redundancy).\n- Engineer feature: Group categories or encode differently (Pros: Reduces redundancy; Cons: Adds complexity)."
    },
    {
      "category": "feature_correlation",
      "severity": "critical",
      "column": "Sex,Survived",
      "description": "Columns 'Sex' and 'Survived' show strong association (F: 372.41, p: 0.0000)",
      "impact_score": "high",
      "quick_fix": "Options: \n- Drop one feature: Avoids redundancy (Pros: Simplifies model; Cons: Loses info).\n- Engineer feature: Transform categorical or numeric feature (Pros: Retains info; Cons: Adds complexity).\n- Retain and test: Use robust models (e.g., trees) (Pros: Keeps info; Cons: May affect sensitive models)."
    },
    {
      "category": "feature_correlation",
      "severity": "warning",
      "column": "Sex,Pclass",
      "description": "Columns 'Sex' and 'Pclass' show strong association (F: 15.74, p: 0.0001)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Drop one feature: If less predictive (Pros: Simplifies model; Cons: Loses info).\n- Retain and test: Evaluate with robust models (Pros: Keeps info; Cons: Risk of redundancy).\n- Engineer feature: Transform or encode differently (Pros: Reduces redundancy; Cons: Adds complexity)."
    },
    {
      "category": "feature_correlation",
      "severity": "warning",
      "column": "Sex,Age",
      "description": "Columns 'Sex' and 'Age' show strong association (F: 6.25, p: 0.0127)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Drop one feature: If less predictive (Pros: Simplifies model; Cons: Loses info).\n- Retain and test: Evaluate with robust models (Pros: Keeps info; Cons: Risk of redundancy).\n- Engineer feature: Transform or encode differently (Pros: Reduces redundancy; Cons: Adds complexity)."
    },
    {
      "category": "feature_correlation",
      "severity": "warning",
      "column": "Sex,SibSp",
      "description": "Columns 'Sex' and 'SibSp' show strong association (F: 11.84, p: 0.0006)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Drop one feature: If less predictive (Pros: Simplifies model; Cons: Loses info).\n- Retain and test: Evaluate with robust models (Pros: Keeps info; Cons: Risk of redundancy).\n- Engineer feature: Transform or encode differently (Pros: Reduces redundancy; Cons: Adds complexity)."
    },
    {
      "category": "feature_correlation",
      "severity": "critical",
      "column": "Sex,Parch",
      "description": "Columns 'Sex' and 'Parch' show strong association (F: 57.01, p: 0.0000)",
      "impact_score": "high",
      "quick_fix": "Options: \n- Drop one feature: Avoids redundancy (Pros: Simplifies model; Cons: Loses info).\n- Engineer feature: Transform categorical or numeric feature (Pros: Retains info; Cons: Adds complexity).\n- Retain and test: Use robust models (e.g., trees) (Pros: Keeps info; Cons: May affect sensitive models)."
    },
    {
      "category": "feature_correlation",
      "severity": "critical",
      "column": "Sex,Fare",
      "description": "Columns 'Sex' and 'Fare' show strong association (F: 30.57, p: 0.0000)",
      "impact_score": "high",
      "quick_fix": "Options: \n- Drop one feature: Avoids redundancy (Pros: Simplifies model; Cons: Loses info).\n- Engineer feature: Transform categorical or numeric feature (Pros: Retains info; Cons: Adds complexity).\n- Retain and test: Use robust models (e.g., trees) (Pros: Keeps info; Cons: May affect sensitive models)."
    },
    {
      "category": "feature_correlation",
      "severity": "warning",
      "column": "Ticket,Survived",
      "description": "Columns 'Ticket' and 'Survived' show strong association (F: 3.03, p: 0.0000)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Drop one feature: If less predictive (Pros: Simplifies model; Cons: Loses info).\n- Retain and test: Evaluate with robust models (Pros: Keeps info; Cons: Risk of redundancy).\n- Engineer feature: Transform or encode differently (Pros: Reduces redundancy; Cons: Adds complexity)."
    },
    {
      "category": "feature_correlation",
      "severity": "warning",
      "column": "Ticket,Age",
      "description": "Columns 'Ticket' and 'Age' show strong association (F: 1.72, p: 0.0007)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Drop one feature: If less predictive (Pros: Simplifies model; Cons: Loses info).\n- Retain and test: Evaluate with robust models (Pros: Keeps info; Cons: Risk of redundancy).\n- Engineer feature: Transform or encode differently (Pros: Reduces redundancy; Cons: Adds complexity)."
    },
    {
      "category": "feature_correlation",
      "severity": "warning",
      "column": "Ticket,SibSp",
      "description": "Columns 'Ticket' and 'SibSp' show strong association (F: 9.63, p: 0.0000)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Drop one feature: If less predictive (Pros: Simplifies model; Cons: Loses info).\n- Retain and test: Evaluate with robust models (Pros: Keeps info; Cons: Risk of redundancy).\n- Engineer feature: Transform or encode differently (Pros: Reduces redundancy; Cons: Adds complexity)."
    },
    {
      "category": "feature_correlation",
      "severity": "warning",
      "column": "Ticket,Parch",
      "description": "Columns 'Ticket' and 'Parch' show strong association (F: 4.28, p: 0.0000)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Drop one feature: If less predictive (Pros: Simplifies model; Cons: Loses info).\n- Retain and test: Evaluate with robust models (Pros: Keeps info; Cons: Risk of redundancy).\n- Engineer feature: Transform or encode differently (Pros: Reduces redundancy; Cons: Adds complexity)."
    },
    {
      "category": "feature_correlation",
      "severity": "critical",
      "column": "Ticket,Fare",
      "description": "Columns 'Ticket' and 'Fare' show strong association (F: 12866198.63, p: 0.0000)",
      "impact_score": "high",
      "quick_fix": "Options: \n- Drop one feature: Avoids redundancy (Pros: Simplifies model; Cons: Loses info).\n- Engineer feature: Transform categorical or numeric feature (Pros: Retains info; Cons: Adds complexity).\n- Retain and test: Use robust models (e.g., trees) (Pros: Keeps info; Cons: May affect sensitive models)."
    },
    {
      "category": "feature_correlation",
      "severity": "warning",
      "column": "Cabin,PassengerId",
      "description": "Columns 'Cabin' and 'PassengerId' show strong association (F: 1.90, p: 0.0109)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Drop one feature: If less predictive (Pros: Simplifies model; Cons: Loses info).\n- Retain and test: Evaluate with robust models (Pros: Keeps info; Cons: Risk of redundancy).\n- Engineer feature: Transform or encode differently (Pros: Reduces redundancy; Cons: Adds complexity)."
    },
    {
      "category": "feature_correlation",
      "severity": "warning",
      "column": "Cabin,Age",
      "description": "Columns 'Cabin' and 'Age' show strong association (F: 2.48, p: 0.0012)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Drop one feature: If less predictive (Pros: Simplifies model; Cons: Loses info).\n- Retain and test: Evaluate with robust models (Pros: Keeps info; Cons: Risk of redundancy).\n- Engineer feature: Transform or encode differently (Pros: Reduces redundancy; Cons: Adds complexity)."
    },
    {
      "category": "feature_correlation",
      "severity": "warning",
      "column": "Cabin,SibSp",
      "description": "Columns 'Cabin' and 'SibSp' show strong association (F: 10.23, p: 0.0000)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Drop one feature: If less predictive (Pros: Simplifies model; Cons: Loses info).\n- Retain and test: Evaluate with robust models (Pros: Keeps info; Cons: Risk of redundancy).\n- Engineer feature: Transform or encode differently (Pros: Reduces redundancy; Cons: Adds complexity)."
    },
    {
      "category": "feature_correlation",
      "severity": "warning",
      "column": "Cabin,Parch",
      "description": "Columns 'Cabin' and 'Parch' show strong association (F: 11.93, p: 0.0000)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Drop one feature: If less predictive (Pros: Simplifies model; Cons: Loses info).\n- Retain and test: Evaluate with robust models (Pros: Keeps info; Cons: Risk of redundancy).\n- Engineer feature: Transform or encode differently (Pros: Reduces redundancy; Cons: Adds complexity)."
    },
    {
      "category": "feature_correlation",
      "severity": "warning",
      "column": "Cabin,Fare",
      "description": "Columns 'Cabin' and 'Fare' show strong association (F: 5.13, p: 0.0000)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Drop one feature: If less predictive (Pros: Simplifies model; Cons: Loses info).\n- Retain and test: Evaluate with robust models (Pros: Keeps info; Cons: Risk of redundancy).\n- Engineer feature: Transform or encode differently (Pros: Reduces redundancy; Cons: Adds complexity)."
    },
    {
      "category": "feature_correlation",
      "severity": "warning",
      "column": "Embarked,Survived",
      "description": "Columns 'Embarked' and 'Survived' show strong association (F: 13.61, p: 0.0000)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Drop one feature: If less predictive (Pros: Simplifies model; Cons: Loses info).\n- Retain and test: Evaluate with robust models (Pros: Keeps info; Cons: Risk of redundancy).\n- Engineer feature: Transform or encode differently (Pros: Reduces redundancy; Cons: Adds complexity)."
    },
    {
      "category": "feature_correlation",
      "severity": "critical",
      "column": "Embarked,Pclass",
      "description": "Columns 'Embarked' and 'Pclass' show strong association (F: 46.51, p: 0.0000)",
      "impact_score": "high",
      "quick_fix": "Options: \n- Drop one feature: Avoids redundancy (Pros: Simplifies model; Cons: Loses info).\n- Engineer feature: Transform categorical or numeric feature (Pros: Retains info; Cons: Adds complexity).\n- Retain and test: Use robust models (e.g., trees) (Pros: Keeps info; Cons: May affect sensitive models)."
    },
    {
      "category": "feature_correlation",
      "severity": "warning",
      "column": "Embarked,Parch",
      "description": "Columns 'Embarked' and 'Parch' show strong association (F: 3.23, p: 0.0402)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Drop one feature: If less predictive (Pros: Simplifies model; Cons: Loses info).\n- Retain and test: Evaluate with robust models (Pros: Keeps info; Cons: Risk of redundancy).\n- Engineer feature: Transform or encode differently (Pros: Reduces redundancy; Cons: Adds complexity)."
    },
    {
      "category": "feature_correlation",
      "severity": "critical",
      "column": "Embarked,Fare",
      "description": "Columns 'Embarked' and 'Fare' show strong association (F: 38.14, p: 0.0000)",
      "impact_score": "high",
      "quick_fix": "Options: \n- Drop one feature: Avoids redundancy (Pros: Simplifies model; Cons: Loses info).\n- Engineer feature: Transform categorical or numeric feature (Pros: Retains info; Cons: Adds complexity).\n- Retain and test: Use robust models (e.g., trees) (Pros: Keeps info; Cons: May affect sensitive models)."
    },
    {
      "category": "high_zero_counts",
      "severity": "warning",
      "column": "Survived",
      "description": "Column 'Survived' has 61.6% zero values",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Transform: Create binary indicator for zeros (Pros: Captures pattern; Cons: Adds complexity).\n- Retain and test: Evaluate with robust models (Pros: Keeps info; Cons: May skew results).\n- Investigate zeros: Verify validity (Pros: Ensures accuracy; Cons: Time-consuming)."
    },
    {
      "category": "high_zero_counts",
      "severity": "warning",
      "column": "SibSp",
      "description": "Column 'SibSp' has 68.2% zero values",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Transform: Create binary indicator for zeros (Pros: Captures pattern; Cons: Adds complexity).\n- Retain and test: Evaluate with robust models (Pros: Keeps info; Cons: May skew results).\n- Investigate zeros: Verify validity (Pros: Ensures accuracy; Cons: Time-consuming)."
    },
    {
      "category": "high_zero_counts",
      "severity": "warning",
      "column": "Parch",
      "description": "Column 'Parch' has 76.1% zero values",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Transform: Create binary indicator for zeros (Pros: Captures pattern; Cons: Adds complexity).\n- Retain and test: Evaluate with robust models (Pros: Keeps info; Cons: May skew results).\n- Investigate zeros: Verify validity (Pros: Ensures accuracy; Cons: Time-consuming)."
    },
    {
      "category": "missing_patterns",
      "severity": "warning",
      "column": "Age",
      "description": "Missingness in 'Age' correlates with 'Ticket' (p: 0.0000)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Impute values: Use simple or domain-informed methods (Pros: Retains feature; Cons: Risk of bias).\n- Drop column: If less critical (Pros: Simplifies model; Cons: Loses info).\n- Test impact: Evaluate model with/without feature (Pros: Data-driven; Cons: Requires computation)."
    },
    {
      "category": "missing_patterns",
      "severity": "warning",
      "column": "Age",
      "description": "Missingness in 'Age' correlates with 'Embarked' (p: 0.0000)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Impute values: Use simple or domain-informed methods (Pros: Retains feature; Cons: Risk of bias).\n- Drop column: If less critical (Pros: Simplifies model; Cons: Loses info).\n- Test impact: Evaluate model with/without feature (Pros: Data-driven; Cons: Requires computation)."
    },
    {
      "category": "missing_patterns",
      "severity": "warning",
      "column": "Age",
      "description": "Missingness in 'Age' correlates with numeric 'Survived' (F: 7.62, p: 0.0059)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Impute values: Use simple or domain-informed methods (Pros: Retains feature; Cons: Risk of bias).\n- Drop column: If less critical (Pros: Simplifies model; Cons: Loses info).\n- Test impact: Evaluate model with/without feature (Pros: Data-driven; Cons: Requires computation)."
    },
    {
      "category": "missing_patterns",
      "severity": "warning",
      "column": "Age",
      "description": "Missingness in 'Age' correlates with numeric 'Pclass' (F: 27.41, p: 0.0000)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Impute values: Use simple or domain-informed methods (Pros: Retains feature; Cons: Risk of bias).\n- Drop column: If less critical (Pros: Simplifies model; Cons: Loses info).\n- Test impact: Evaluate model with/without feature (Pros: Data-driven; Cons: Requires computation)."
    },
    {
      "category": "missing_patterns",
      "severity": "warning",
      "column": "Age",
      "description": "Missingness in 'Age' correlates with numeric 'Parch' (F: 13.91, p: 0.0002)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Impute values: Use simple or domain-informed methods (Pros: Retains feature; Cons: Risk of bias).\n- Drop column: If less critical (Pros: Simplifies model; Cons: Loses info).\n- Test impact: Evaluate model with/without feature (Pros: Data-driven; Cons: Requires computation)."
    },
    {
      "category": "missing_patterns",
      "severity": "warning",
      "column": "Age",
      "description": "Missingness in 'Age' correlates with numeric 'Fare' (F: 9.11, p: 0.0026)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Impute values: Use simple or domain-informed methods (Pros: Retains feature; Cons: Risk of bias).\n- Drop column: If less critical (Pros: Simplifies model; Cons: Loses info).\n- Test impact: Evaluate model with/without feature (Pros: Data-driven; Cons: Requires computation)."
    },
    {
      "category": "missing_patterns",
      "severity": "warning",
      "column": "Cabin",
      "description": "Missingness in 'Cabin' correlates with 'Sex' (p: 0.0000)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Impute values: Use simple or domain-informed methods (Pros: Retains feature; Cons: Risk of bias).\n- Drop column: If less critical (Pros: Simplifies model; Cons: Loses info).\n- Test impact: Evaluate model with/without feature (Pros: Data-driven; Cons: Requires computation)."
    },
    {
      "category": "missing_patterns",
      "severity": "warning",
      "column": "Cabin",
      "description": "Missingness in 'Cabin' correlates with 'Embarked' (p: 0.0000)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Impute values: Use simple or domain-informed methods (Pros: Retains feature; Cons: Risk of bias).\n- Drop column: If less critical (Pros: Simplifies model; Cons: Loses info).\n- Test impact: Evaluate model with/without feature (Pros: Data-driven; Cons: Requires computation)."
    },
    {
      "category": "missing_patterns",
      "severity": "warning",
      "column": "Cabin",
      "description": "Missingness in 'Cabin' correlates with numeric 'Survived' (F: 99.25, p: 0.0000)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Impute values: Use simple or domain-informed methods (Pros: Retains feature; Cons: Risk of bias).\n- Drop column: If less critical (Pros: Simplifies model; Cons: Loses info).\n- Test impact: Evaluate model with/without feature (Pros: Data-driven; Cons: Requires computation)."
    },
    {
      "category": "missing_patterns",
      "severity": "warning",
      "column": "Cabin",
      "description": "Missingness in 'Cabin' correlates with numeric 'Pclass' (F: 988.15, p: 0.0000)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Impute values: Use simple or domain-informed methods (Pros: Retains feature; Cons: Risk of bias).\n- Drop column: If less critical (Pros: Simplifies model; Cons: Loses info).\n- Test impact: Evaluate model with/without feature (Pros: Data-driven; Cons: Requires computation)."
    },
    {
      "category": "missing_patterns",
      "severity": "warning",
      "column": "Cabin",
      "description": "Missingness in 'Cabin' correlates with numeric 'Age' (F: 47.36, p: 0.0000)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Impute values: Use simple or domain-informed methods (Pros: Retains feature; Cons: Risk of bias).\n- Drop column: If less critical (Pros: Simplifies model; Cons: Loses info).\n- Test impact: Evaluate model with/without feature (Pros: Data-driven; Cons: Requires computation)."
    },
    {
      "category": "missing_patterns",
      "severity": "warning",
      "column": "Cabin",
      "description": "Missingness in 'Cabin' correlates with numeric 'Fare' (F: 269.15, p: 0.0000)",
      "impact_score": "medium",
      "quick_fix": "Options: \n- Impute values: Use simple or domain-informed methods (Pros: Retains feature; Cons: Risk of bias).\n- Drop column: If less critical (Pros: Simplifies model; Cons: Loses info).\n- Test impact: Evaluate model with/without feature (Pros: Data-driven; Cons: Requires computation)."
    }
  ],
  "summaries": {
    "head": [
      {
        "PassengerId": 1,
        "Survived": 0,
        "Pclass": 3,
        "Name": "Braund, Mr. Owen Harris",
        "Sex": "male",
        "Age": 22.0,
        "SibSp": 1,
        "Parch": 0,
        "Ticket": "A/5 21171",
        "Fare": 7.25,
        "Cabin": NaN,
        "Embarked": "S"
      },
      {
        "PassengerId": 2,
        "Survived": 1,
        "Pclass": 1,
        "Name": "Cumings, Mrs. John Bradley (Florence Briggs Thayer)",
        "Sex": "female",
        "Age": 38.0,
        "SibSp": 1,
        "Parch": 0,
        "Ticket": "PC 17599",
        "Fare": 71.2833,
        "Cabin": "C85",
        "Embarked": "C"
      },
      {
        "PassengerId": 3,
        "Survived": 1,
        "Pclass": 3,
        "Name": "Heikkinen, Miss. Laina",
        "Sex": "female",
        "Age": 26.0,
        "SibSp": 0,
        "Parch": 0,
        "Ticket": "STON/O2. 3101282",
        "Fare": 7.925,
        "Cabin": NaN,
        "Embarked": "S"
      },
      {
        "PassengerId": 4,
        "Survived": 1,
        "Pclass": 1,
        "Name": "Futrelle, Mrs. Jacques Heath (Lily May Peel)",
        "Sex": "female",
        "Age": 35.0,
        "SibSp": 1,
        "Parch": 0,
        "Ticket": "113803",
        "Fare": 53.1,
        "Cabin": "C123",
        "Embarked": "S"
      },
      {
        "PassengerId": 5,
        "Survived": 0,
        "Pclass": 3,
        "Name": "Allen, Mr. William Henry",
        "Sex": "male",
        "Age": 35.0,
        "SibSp": 0,
        "Parch": 0,
        "Ticket": "373450",
        "Fare": 8.05,
        "Cabin": NaN,
        "Embarked": "S"
      }
    ],
    "tail": [
      {
        "PassengerId": 887,
        "Survived": 0,
        "Pclass": 2,
        "Name": "Montvila, Rev. Juozas",
        "Sex": "male",
        "Age": 27.0,
        "SibSp": 0,
        "Parch": 0,
        "Ticket": "211536",
        "Fare": 13.0,
        "Cabin": NaN,
        "Embarked": "S"
      },
      {
        "PassengerId": 888,
        "Survived": 1,
        "Pclass": 1,
        "Name": "Graham, Miss. Margaret Edith",
        "Sex": "female",
        "Age": 19.0,
        "SibSp": 0,
        "Parch": 0,
        "Ticket": "112053",
        "Fare": 30.0,
        "Cabin": "B42",
        "Embarked": "S"
      },
      {
        "PassengerId": 889,
        "Survived": 0,
        "Pclass": 3,
        "Name": "Johnston, Miss. Catherine Helen \"Carrie\"",
        "Sex": "female",
        "Age": NaN,
        "SibSp": 1,
        "Parch": 2,
        "Ticket": "W./C. 6607",
        "Fare": 23.45,
        "Cabin": NaN,
        "Embarked": "S"
      },
      {
        "PassengerId": 890,
        "Survived": 1,
        "Pclass": 1,
        "Name": "Behr, Mr. Karl Howell",
        "Sex": "male",
        "Age": 26.0,
        "SibSp": 0,
        "Parch": 0,
        "Ticket": "111369",
        "Fare": 30.0,
        "Cabin": "C148",
        "Embarked": "C"
      },
      {
        "PassengerId": 891,
        "Survived": 0,
        "Pclass": 3,
        "Name": "Dooley, Mr. Patrick",
        "Sex": "male",
        "Age": 32.0,
        "SibSp": 0,
        "Parch": 0,
        "Ticket": "370376",
        "Fare": 7.75,
        "Cabin": NaN,
        "Embarked": "Q"
      }
    ],
    "sample": [
      {
        "PassengerId": 510,
        "Survived": 1,
        "Pclass": 3,
        "Name": "Lang, Mr. Fang",
        "Sex": "male",
        "Age": 26.0,
        "SibSp": 0,
        "Parch": 0,
        "Ticket": "1601",
        "Fare": 56.4958,
        "Cabin": NaN,
        "Embarked": "S"
      },
      {
        "PassengerId": 708,
        "Survived": 1,
        "Pclass": 1,
        "Name": "Calderhead, Mr. Edward Pennington",
        "Sex": "male",
        "Age": 42.0,
        "SibSp": 0,
        "Parch": 0,
        "Ticket": "PC 17476",
        "Fare": 26.2875,
        "Cabin": "E24",
        "Embarked": "S"
      },
      {
        "PassengerId": 185,
        "Survived": 1,
        "Pclass": 3,
        "Name": "Kink-Heilmann, Miss. Luise Gretchen",
        "Sex": "female",
        "Age": 4.0,
        "SibSp": 0,
        "Parch": 2,
        "Ticket": "315153",
        "Fare": 22.025,
        "Cabin": NaN,
        "Embarked": "S"
      },
      {
        "PassengerId": 205,
        "Survived": 1,
        "Pclass": 3,
        "Name": "Cohen, Mr. Gurshon \"Gus\"",
        "Sex": "male",
        "Age": 18.0,
        "SibSp": 0,
        "Parch": 0,
        "Ticket": "A/5 3540",
        "Fare": 8.05,
        "Cabin": NaN,
        "Embarked": "S"
      },
      {
        "PassengerId": 20,
        "Survived": 1,
        "Pclass": 3,
        "Name": "Masselmani, Mrs. Fatima",
        "Sex": "female",
        "Age": NaN,
        "SibSp": 0,
        "Parch": 0,
        "Ticket": "2649",
        "Fare": 7.225,
        "Cabin": NaN,
        "Embarked": "C"
      },
      {
        "PassengerId": 240,
        "Survived": 0,
        "Pclass": 2,
        "Name": "Hunt, Mr. George Henry",
        "Sex": "male",
        "Age": 33.0,
        "SibSp": 0,
        "Parch": 0,
        "Ticket": "SCO/W 1585",
        "Fare": 12.275,
        "Cabin": NaN,
        "Embarked": "S"
      },
      {
        "PassengerId": 358,
        "Survived": 0,
        "Pclass": 2,
        "Name": "Funk, Miss. Annie Clemmer",
        "Sex": "female",
        "Age": 38.0,
        "SibSp": 0,
        "Parch": 0,
        "Ticket": "237671",
        "Fare": 13.0,
        "Cabin": NaN,
        "Embarked": "S"
      },
      {
        "PassengerId": 36,
        "Survived": 0,
        "Pclass": 1,
        "Name": "Holverson, Mr. Alexander Oskar",
        "Sex": "male",
        "Age": 42.0,
        "SibSp": 1,
        "Parch": 0,
        "Ticket": "113789",
        "Fare": 52.0,
        "Cabin": NaN,
        "Embarked": "S"
      },
      {
        "PassengerId": 530,
        "Survived": 0,
        "Pclass": 2,
        "Name": "Hocking, Mr. Richard George",
        "Sex": "male",
        "Age": 23.0,
        "SibSp": 2,
        "Parch": 1,
        "Ticket": "29104",
        "Fare": 11.5,
        "Cabin": NaN,
        "Embarked": "S"
      },
      {
        "PassengerId": 374,
        "Survived": 0,
        "Pclass": 1,
        "Name": "Ringhini, Mr. Sante",
        "Sex": "male",
        "Age": 22.0,
        "SibSp": 0,
        "Parch": 0,
        "Ticket": "PC 17760",
        "Fare": 135.6333,
        "Cabin": NaN,
        "Embarked": "C"
      }
    ],
    "dataset_info": {
      "rows": 891,
      "columns": 12,
      "memory_mb": 0.3,
      "missing_cells": 866,
      "total_cells": 10692,
      "missing_percentage": 8.1
    },
    "variable_types": {
      "PassengerId": "int64",
      "Survived": "int64",
      "Pclass": "int64",
      "Name": "object",
      "Sex": "object",
      "Age": "float64",
      "SibSp": "int64",
      "Parch": "int64",
      "Ticket": "object",
      "Fare": "float64",
      "Cabin": "object",
      "Embarked": "object"
    },
    "reproduction_info": {
      "dataset_hash": "9a4bcd798a058b35f2f8aeaeede9a159",
      "analysis_timestamp": "2025-09-24T22:29:08.325969"
    },
    "variables": {
      "PassengerId": {
        "count": 891,
        "mean": 446.0,
        "std": 257.3538420152301,
        "min": 1.0,
        "max": 891.0,
        "quantiles": {
          "25%": 223.5,
          "50%": 446.0,
          "75%": 668.5
        },
        "missing": 0,
        "zeros": 0,
        "histogram": {
          "bin_edges": [
            1.0,
            90.0,
            179.0,
            268.0,
            357.0,
            446.0,
            535.0,
            624.0,
            713.0,
            802.0,
            891.0
          ],
          "counts": [
            89,
            89,
            89,
            89,
            89,
            89,
            89,
            89,
            89,
            90
          ]
        }
      },
      "Survived": {
        "count": 891,
        "mean": 0.3838383838383838,
        "std": 0.4865924542648575,
        "min": 0.0,
        "max": 1.0,
        "quantiles": {
          "25%": 0.0,
          "50%": 0.0,
          "75%": 1.0
        },
        "missing": 0,
        "zeros": 549,
        "histogram": {
          "bin_edges": [
            0.0,
            0.1,
            0.2,
            0.30000000000000004,
            0.4,
            0.5,
            0.6000000000000001,
            0.7000000000000001,
            0.8,
            0.9,
            1.0
          ],
          "counts": [
            549,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            342
          ]
        }
      },
      "Pclass": {
        "count": 891,
        "mean": 2.308641975308642,
        "std": 0.836071240977049,
        "min": 1.0,
        "max": 3.0,
        "quantiles": {
          "25%": 2.0,
          "50%": 3.0,
          "75%": 3.0
        },
        "missing": 0,
        "zeros": 0,
        "histogram": {
          "bin_edges": [
            1.0,
            1.2,
            1.4,
            1.6,
            1.8,
            2.0,
            2.2,
            2.4000000000000004,
            2.6,
            2.8,
            3.0
          ],
          "counts": [
            216,
            0,
            0,
            0,
            0,
            184,
            0,
            0,
            0,
            491
          ]
        }
      },
      "Name": {
        "count": 891,
        "missing": 0,
        "avg_length": 26.9652076318743,
        "min_length": 12.0,
        "max_length": 82.0,
        "common_lengths": {
          "19": 64,
          "25": 55,
          "27": 50,
          "18": 50,
          "26": 49
        },
        "char_freq": {
          " ": 2735,
          "r": 1958,
          "e": 1703,
          "a": 1657,
          "i": 1325,
          "n": 1304,
          "s": 1297,
          "M": 1128,
          "l": 1067,
          "o": 1008
        }
      },
      "Sex": {
        "count": 891,
        "missing": 0,
        "avg_length": 4.704826038159371,
        "min_length": 4.0,
        "max_length": 6.0,
        "common_lengths": {
          "4": 577,
          "6": 314
        },
        "char_freq": {
          "e": 1205,
          "m": 891,
          "a": 891,
          "l": 891,
          "f": 314
        }
      },
      "Age": {
        "count": 714,
        "mean": 29.69911764705882,
        "std": 14.526497332334042,
        "min": 0.42,
        "max": 80.0,
        "quantiles": {
          "25%": 20.125,
          "50%": 28.0,
          "75%": 38.0
        },
        "missing": 177,
        "zeros": 0,
        "histogram": {
          "bin_edges": [
            0.42,
            8.378,
            16.336000000000002,
            24.294000000000004,
            32.252,
            40.21,
            48.168000000000006,
            56.126000000000005,
            64.084,
            72.042,
            80.0
          ],
          "counts": [
            54,
            46,
            177,
            169,
            118,
            70,
            45,
            24,
            9,
            2
          ]
        }
      },
      "SibSp": {
        "count": 891,
        "mean": 0.5230078563411896,
        "std": 1.1027434322934317,
        "min": 0.0,
        "max": 8.0,
        "quantiles": {
          "25%": 0.0,
          "50%": 0.0,
          "75%": 1.0
        },
        "missing": 0,
        "zeros": 608,
        "histogram": {
          "bin_edges": [
            0.0,
            0.8,
            1.6,
            2.4000000000000004,
            3.2,
            4.0,
            4.800000000000001,
            5.6000000000000005,
            6.4,
            7.2,
            8.0
          ],
          "counts": [
            608,
            209,
            28,
            16,
            0,
            18,
            5,
            0,
            0,
            7
          ]
        }
      },
      "Parch": {
        "count": 891,
        "mean": 0.38159371492704824,
        "std": 0.8060572211299483,
        "min": 0.0,
        "max": 6.0,
        "quantiles": {
          "25%": 0.0,
          "50%": 0.0,
          "75%": 0.0
        },
        "missing": 0,
        "zeros": 678,
        "histogram": {
          "bin_edges": [
            0.0,
            0.6,
            1.2,
            1.7999999999999998,
            2.4,
            3.0,
            3.5999999999999996,
            4.2,
            4.8,
            5.3999999999999995,
            6.0
          ],
          "counts": [
            678,
            118,
            0,
            80,
            0,
            5,
            4,
            0,
            5,
            1
          ]
        }
      },
      "Ticket": {
        "count": 891,
        "missing": 0,
        "avg_length": 6.750841750841751,
        "min_length": 3.0,
        "max_length": 18.0,
        "common_lengths": {
          "6": 419,
          "5": 131,
          "4": 101,
          "8": 76,
          "10": 41
        },
        "char_freq": {
          "3": 746,
          "1": 689,
          "2": 594,
          "7": 490,
          "4": 464,
          "6": 422,
          "0": 406,
          "5": 387,
          "9": 328,
          "8": 282
        }
      },
      "Fare": {
        "count": 891,
        "mean": 32.204207968574636,
        "std": 49.6934285971809,
        "min": 0.0,
        "max": 512.3292,
        "quantiles": {
          "25%": 7.9104,
          "50%": 14.4542,
          "75%": 31.0
        },
        "missing": 0,
        "zeros": 15,
        "histogram": {
          "bin_edges": [
            0.0,
            51.23292,
            102.46584,
            153.69876,
            204.93168,
            256.1646,
            307.39752,
            358.63044,
            409.86336,
            461.09628,
            512.3292
          ],
          "counts": [
            732,
            106,
            31,
            2,
            11,
            6,
            0,
            0,
            0,
            3
          ]
        }
      },
      "Cabin": {
        "count": 204,
        "unique": 147,
        "top_values": {
          "G6": 4,
          "C23 C25 C27": 4,
          "B96 B98": 4,
          "F2": 3,
          "D": 3,
          "E101": 3,
          "C22 C26": 3,
          "F33": 3,
          "C83": 2,
          "C123": 2
        },
        "most_frequent": "B96 B98",
        "missing": 687
      },
      "Embarked": {
        "count": 889,
        "unique": 3,
        "top_values": {
          "S": 644,
          "C": 168,
          "Q": 77
        },
        "most_frequent": "S",
        "missing": 2
      }
    },
    "scatter_pairs": [
      [
        "PassengerId",
        "Survived"
      ],
      [
        "PassengerId",
        "Pclass"
      ],
      [
        "PassengerId",
        "Age"
      ],
      [
        "PassengerId",
        "SibSp"
      ],
      [
        "PassengerId",
        "Parch"
      ],
      [
        "PassengerId",
        "Fare"
      ],
      [
        "Survived",
        "Pclass"
      ],
      [
        "Survived",
        "Age"
      ],
      [
        "Survived",
        "SibSp"
      ],
      [
        "Survived",
        "Parch"
      ],
      [
        "Survived",
        "Fare"
      ],
      [
        "Pclass",
        "Age"
      ],
      [
        "Pclass",
        "SibSp"
      ],
      [
        "Pclass",
        "Parch"
      ],
      [
        "Pclass",
        "Fare"
      ],
      [
        "Age",
        "SibSp"
      ],
      [
        "Age",
        "Parch"
      ],
      [
        "Age",
        "Fare"
      ],
      [
        "SibSp",
        "Parch"
      ],
      [
        "SibSp",
        "Fare"
      ],
      [
        "Parch",
        "Fare"
      ]
    ],
    "numeric_correlations": {
      "pearson": {
        "PassengerId": {
          "PassengerId": 1.0,
          "Survived": -0.0050066607670665175,
          "Pclass": -0.03514399403038102,
          "Age": 0.036847197861327674,
          "SibSp": -0.0575268337844415,
          "Parch": -0.0016520124027188366,
          "Fare": 0.012658219287491099
        },
        "Survived": {
          "PassengerId": -0.0050066607670665175,
          "Survived": 1.0,
          "Pclass": -0.33848103596101514,
          "Age": -0.07722109457217756,
          "SibSp": -0.035322498885735576,
          "Parch": 0.08162940708348335,
          "Fare": 0.2573065223849626
        },
        "Pclass": {
          "PassengerId": -0.03514399403038102,
          "Survived": -0.33848103596101514,
          "Pclass": 1.0,
          "Age": -0.36922601531551735,
          "SibSp": 0.08308136284568686,
          "Parch": 0.018442671310748508,
          "Fare": -0.5494996199439076
        },
        "Age": {
          "PassengerId": 0.036847197861327674,
          "Survived": -0.07722109457217756,
          "Pclass": -0.36922601531551735,
          "Age": 1.0,
          "SibSp": -0.30824675892365666,
          "Parch": -0.1891192626320352,
          "Fare": 0.09606669176903912
        },
        "SibSp": {
          "PassengerId": -0.0575268337844415,
          "Survived": -0.035322498885735576,
          "Pclass": 0.08308136284568686,
          "Age": -0.30824675892365666,
          "SibSp": 1.0,
          "Parch": 0.41483769862015624,
          "Fare": 0.159651043242161
        },
        "Parch": {
          "PassengerId": -0.0016520124027188366,
          "Survived": 0.08162940708348335,
          "Pclass": 0.018442671310748508,
          "Age": -0.1891192626320352,
          "SibSp": 0.41483769862015624,
          "Parch": 1.0,
          "Fare": 0.21622494477076448
        },
        "Fare": {
          "PassengerId": 0.012658219287491099,
          "Survived": 0.2573065223849626,
          "Pclass": -0.5494996199439076,
          "Age": 0.09606669176903912,
          "SibSp": 0.159651043242161,
          "Parch": 0.21622494477076448,
          "Fare": 1.0
        }
      },
      "spearman": {
        "PassengerId": {
          "PassengerId": 1.0,
          "Survived": -0.005006660767066498,
          "Pclass": -0.03409135008914179,
          "Age": 0.04100991613236293,
          "SibSp": -0.06116076582604884,
          "Parch": 0.0012351780934194748,
          "Fare": -0.013975133780990471
        },
        "Survived": {
          "PassengerId": -0.005006660767066498,
          "Survived": 1.0,
          "Pclass": -0.3396679366500525,
          "Age": -0.052565300044694487,
          "SibSp": 0.08887948468090501,
          "Parch": 0.13826563286545587,
          "Fare": 0.3237361394448083
        },
        "Pclass": {
          "PassengerId": -0.03409135008914179,
          "Survived": -0.3396679366500525,
          "Pclass": 1.0,
          "Age": -0.36166557503434504,
          "SibSp": -0.04301876651204207,
          "Parch": -0.022801341928590464,
          "Fare": -0.6880316726256096
        },
        "Age": {
          "PassengerId": 0.04100991613236293,
          "Survived": -0.052565300044694487,
          "Pclass": -0.36166557503434504,
          "Age": 1.0,
          "SibSp": -0.1820612589179174,
          "Parch": -0.2542121174301802,
          "Fare": 0.13505121773428777
        },
        "SibSp": {
          "PassengerId": -0.06116076582604884,
          "Survived": 0.08887948468090501,
          "Pclass": -0.04301876651204207,
          "Age": -0.1820612589179174,
          "SibSp": 1.0,
          "Parch": 0.45001397100861634,
          "Fare": 0.4471129882944581
        },
        "Parch": {
          "PassengerId": 0.0012351780934194748,
          "Survived": 0.13826563286545587,
          "Pclass": -0.022801341928590464,
          "Age": -0.2542121174301802,
          "SibSp": 0.45001397100861634,
          "Parch": 1.0,
          "Fare": 0.4100738082761382
        },
        "Fare": {
          "PassengerId": -0.013975133780990471,
          "Survived": 0.3237361394448083,
          "Pclass": -0.6880316726256096,
          "Age": 0.13505121773428777,
          "SibSp": 0.4471129882944581,
          "Parch": 0.4100738082761382,
          "Fare": 1.0
        }
      },
      "kendall": {
        "PassengerId": {
          "PassengerId": 1.0,
          "Survived": -0.004090214762393426,
          "Pclass": -0.026824400986911346,
          "Age": 0.02754181401332336,
          "SibSp": -0.04839417859092306,
          "Parch": 0.0007978451239667482,
          "Fare": -0.008920866826633959
        },
        "Survived": {
          "PassengerId": -0.004090214762393426,
          "Survived": 1.0,
          "Pclass": -0.32353318439409545,
          "Age": -0.043385054517253836,
          "SibSp": 0.08591509091074537,
          "Parch": 0.13393261225325737,
          "Fare": 0.2662286416742869
        },
        "Pclass": {
          "PassengerId": -0.026824400986911346,
          "Survived": -0.32353318439409545,
          "Pclass": 1.0,
          "Age": -0.2860814161328999,
          "SibSp": -0.03955236574306877,
          "Parch": -0.021019471733083554,
          "Fare": -0.5735307309748154
        },
        "Age": {
          "PassengerId": 0.02754181401332336,
          "Survived": -0.043385054517253836,
          "Pclass": -0.2860814161328999,
          "Age": 1.0,
          "SibSp": -0.14274551945143282,
          "Parch": -0.20011172214961384,
          "Fare": 0.0932489072038393
        },
        "SibSp": {
          "PassengerId": -0.04839417859092306,
          "Survived": 0.08591509091074537,
          "Pclass": -0.03955236574306877,
          "Age": -0.14274551945143282,
          "SibSp": 1.0,
          "Parch": 0.4252407973704515,
          "Fare": 0.35826215386190535
        },
        "Parch": {
          "PassengerId": 0.0007978451239667482,
          "Survived": 0.13393261225325737,
          "Pclass": -0.021019471733083554,
          "Age": -0.20011172214961384,
          "SibSp": 0.4252407973704515,
          "Parch": 1.0,
          "Fare": 0.3303597642072928
        },
        "Fare": {
          "PassengerId": -0.008920866826633959,
          "Survived": 0.2662286416742869,
          "Pclass": -0.5735307309748154,
          "Age": 0.0932489072038393,
          "SibSp": 0.35826215386190535,
          "Parch": 0.3303597642072928,
          "Fare": 1.0
        }
      }
    },
    "categorical_correlations": {
      "Name__Sex": 1.0,
      "Name__Ticket": 0.9999999999999998,
      "Name__Cabin": 0.9999999999999999,
      "Name__Embarked": 1.0,
      "Sex__Ticket": 0.8597830957508534,
      "Sex__Cabin": 0.8590298967010106,
      "Sex__Embarked": 0.12256919037251324,
      "Ticket__Cabin": 0.9499906681139273,
      "Ticket__Embarked": 0.9978085891975117,
      "Cabin__Embarked": 0.9492663573697417
    },
    "mixed_correlations": {
      "Sex__PassengerId": {
        "f_stat": 1.6421191114108868,
        "p_value": 0.20036910036780892
      },
      "Sex__Survived": {
        "f_stat": 372.4057236022147,
        "p_value": 1.406066130879677e-69
      },
      "Sex__Pclass": {
        "f_stat": 15.740438391473655,
        "p_value": 7.850524283807263e-05
      },
      "Sex__Age": {
        "f_stat": 6.246032404476691,
        "p_value": 0.012671296797014266
      },
      "Sex__SibSp": {
        "f_stat": 11.837201434771872,
        "p_value": 0.0006076214735497104
      },
      "Sex__Parch": {
        "f_stat": 57.01120393523347,
        "p_value": 1.0739326016041233e-13
      },
      "Sex__Fare": {
        "f_stat": 30.57139211854278,
        "p_value": 4.230867870041279e-08
      },
      "Ticket__PassengerId": {
        "f_stat": 1.052473072718765,
        "p_value": 0.36761043961239726
      },
      "Ticket__Survived": {
        "f_stat": 3.027615536357269,
        "p_value": 3.3056232354473105e-13
      },
      "Ticket__Age": {
        "f_stat": 1.7206357940221262,
        "p_value": 0.0007006141396686394
      },
      "Ticket__SibSp": {
        "f_stat": 9.629895622911052,
        "p_value": 2.9489023049566942e-46
      },
      "Ticket__Parch": {
        "f_stat": 4.278504085175907,
        "p_value": 3.2590531436242046e-21
      },
      "Ticket__Fare": {
        "f_stat": 12866198.626307236,
        "p_value": 0.0
      },
      "Cabin__PassengerId": {
        "f_stat": 1.9048779712542736,
        "p_value": 0.010890906730532343
      },
      "Cabin__Survived": {
        "f_stat": 1.2576051779935302,
        "p_value": 0.20536412826970138
      },
      "Cabin__Age": {
        "f_stat": 2.4779316034460743,
        "p_value": 0.0011929305269348497
      },
      "Cabin__SibSp": {
        "f_stat": 10.22665143727386,
        "p_value": 3.516869011293232e-15
      },
      "Cabin__Parch": {
        "f_stat": 11.934392468373073,
        "p_value": 9.416625576196054e-17
      },
      "Cabin__Fare": {
        "f_stat": 5.133611685227081,
        "p_value": 7.363797344684879e-09
      },
      "Embarked__PassengerId": {
        "f_stat": 0.5210405505142851,
        "p_value": 0.5940841065910332
      },
      "Embarked__Survived": {
        "f_stat": 13.605270445693582,
        "p_value": 1.514339014290716e-06
      },
      "Embarked__Pclass": {
        "f_stat": 46.51218940511203,
        "p_value": 6.188928688440989e-20
      },
      "Embarked__Age": {
        "f_stat": 0.6366398124910262,
        "p_value": 0.5293693792571084
      },
      "Embarked__SibSp": {
        "f_stat": 2.1842579946585814,
        "p_value": 0.11316698890183281
      },
      "Embarked__Parch": {
        "f_stat": 3.2267895768620782,
        "p_value": 0.040151541423720696
      },
      "Embarked__Fare": {
        "f_stat": 38.14030520011266,
        "p_value": 1.2896450252631794e-16
      }
    },
    "missing_values": {
      "count": {
        "PassengerId": 0,
        "Survived": 0,
        "Pclass": 0,
        "Name": 0,
        "Sex": 0,
        "Age": 177,
        "SibSp": 0,
        "Parch": 0,
        "Ticket": 0,
        "Fare": 0,
        "Cabin": 687,
        "Embarked": 2
      },
      "percentage": {
        "PassengerId": 0.0,
        "Survived": 0.0,
        "Pclass": 0.0,
        "Name": 0.0,
        "Sex": 0.0,
        "Age": 19.87,
        "SibSp": 0.0,
        "Parch": 0.0,
        "Ticket": 0.0,
        "Fare": 0.0,
        "Cabin": 77.1,
        "Embarked": 0.22
      }
    },
    "missing_patterns": {
      "Age": [
        5,
        17,
        19,
        26,
        28,
        29,
        31,
        32,
        36,
        42,
        45,
        46,
        47,
        48,
        55,
        64,
        65,
        76,
        77,
        82,
        87,
        95,
        101,
        107,
        109,
        121,
        126,
        128,
        140,
        154,
        158,
        159,
        166,
        168,
        176,
        180,
        181,
        185,
        186,
        196,
        198,
        201,
        214,
        223,
        229,
        235,
        240,
        241,
        250,
        256,
        260,
        264,
        270,
        274,
        277,
        284,
        295,
        298,
        300,
        301,
        303,
        304,
        306,
        324,
        330,
        334,
        335,
        347,
        351,
        354,
        358,
        359,
        364,
        367,
        368,
        375,
        384,
        388,
        409,
        410,
        411,
        413,
        415,
        420,
        425,
        428,
        431,
        444,
        451,
        454,
        457,
        459,
        464,
        466,
        468,
        470,
        475,
        481,
        485,
        490,
        495,
        497,
        502,
        507,
        511,
        517,
        522,
        524,
        527,
        531,
        533,
        538,
        547,
        552,
        557,
        560,
        563,
        564,
        568,
        573,
        578,
        584,
        589,
        593,
        596,
        598,
        601,
        602,
        611,
        612,
        613,
        629,
        633,
        639,
        643,
        648,
        650,
        653,
        656,
        667,
        669,
        674,
        680,
        692,
        697,
        709,
        711,
        718,
        727,
        732,
        738,
        739,
        740,
        760,
        766,
        768,
        773,
        776,
        778,
        783,
        790,
        792,
        793,
        815,
        825,
        826,
        828,
        832,
        837,
        839,
        846,
        849,
        859,
        863,
        868,
        878,
        888
      ],
      "Cabin": [
        0,
        2,
        4,
        5,
        7,
        8,
        9,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        22,
        24,
        25,
        26,
        28,
        29,
        30,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        53,
        56,
        57,
        58,
        59,
        60,
        63,
        64,
        65,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        89,
        90,
        91,
        93,
        94,
        95,
        98,
        99,
        100,
        101,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        111,
        112,
        113,
        114,
        115,
        116,
        117,
        119,
        120,
        121,
        122,
        125,
        126,
        127,
        129,
        130,
        131,
        132,
        133,
        134,
        135,
        138,
        140,
        141,
        142,
        143,
        144,
        145,
        146,
        147,
        149,
        150,
        152,
        153,
        154,
        155,
        156,
        157,
        158,
        159,
        160,
        161,
        162,
        163,
        164,
        165,
        167,
        168,
        169,
        171,
        172,
        173,
        175,
        176,
        178,
        179,
        180,
        181,
        182,
        184,
        186,
        187,
        188,
        189,
        190,
        191,
        192,
        196,
        197,
        198,
        199,
        200,
        201,
        202,
        203,
        204,
        206,
        207,
        208,
        210,
        211,
        212,
        213,
        214,
        216,
        217,
        219,
        220,
        221,
        222,
        223,
        225,
        226,
        227,
        228,
        229,
        231,
        232,
        233,
        234,
        235,
        236,
        237,
        238,
        239,
        240,
        241,
        242,
        243,
        244,
        246,
        247,
        249,
        250,
        253,
        254,
        255,
        256,
        258,
        259,
        260,
        261,
        264,
        265,
        266,
        267,
        270,
        271,
        272,
        274,
        276,
        277,
        278,
        279,
        280,
        281,
        282,
        283,
        285,
        286,
        287,
        288,
        289,
        290,
        293,
        294,
        295,
        296,
        300,
        301,
        302,
        304,
        306,
        308,
        312,
        313,
        314,
        315,
        316,
        317,
        320,
        321,
        322,
        323,
        324,
        326,
        328,
        330,
        333,
        334,
        335,
        338,
        342,
        343,
        344,
        346,
        347,
        348,
        349,
        350,
        352,
        353,
        354,
        355,
        357,
        358,
        359,
        360,
        361,
        362,
        363,
        364,
        365,
        367,
        368,
        371,
        372,
        373,
        374,
        375,
        376,
        378,
        379,
        380,
        381,
        382,
        383,
        384,
        385,
        386,
        387,
        388,
        389,
        391,
        392,
        395,
        396,
        397,
        398,
        399,
        400,
        401,
        402,
        403,
        404,
        405,
        406,
        407,
        408,
        409,
        410,
        411,
        413,
        414,
        415,
        416,
        417,
        418,
        419,
        420,
        421,
        422,
        423,
        424,
        425,
        426,
        427,
        428,
        431,
        432,
        433,
        436,
        437,
        439,
        440,
        441,
        442,
        443,
        444,
        446,
        447,
        448,
        450,
        451,
        454,
        455,
        458,
        459,
        461,
        463,
        464,
        465,
        466,
        467,
        468,
        469,
        470,
        471,
        472,
        474,
        476,
        477,
        478,
        479,
        480,
        481,
        482,
        483,
        485,
        488,
        489,
        490,
        491,
        493,
        494,
        495,
        497,
        499,
        500,
        501,
        502,
        503,
        506,
        507,
        508,
        509,
        510,
        511,
        513,
        514,
        517,
        518,
        519,
        521,
        522,
        524,
        525,
        526,
        528,
        529,
        530,
        531,
        532,
        533,
        534,
        535,
        537,
        538,
        541,
        542,
        543,
        545,
        546,
        547,
        548,
        549,
        551,
        552,
        553,
        554,
        555,
        557,
        559,
        560,
        561,
        562,
        563,
        564,
        565,
        566,
        567,
        568,
        569,
        570,
        573,
        574,
        575,
        576,
        578,
        579,
        580,
        582,
        584,
        586,
        588,
        589,
        590,
        592,
        593,
        594,
        595,
        596,
        597,
        598,
        600,
        601,
        602,
        603,
        604,
        605,
        606,
        607,
        608,
        610,
        611,
        612,
        613,
        614,
        615,
        616,
        617,
        619,
        620,
        622,
        623,
        624,
        626,
        628,
        629,
        631,
        633,
        634,
        635,
        636,
        637,
        638,
        639,
        640,
        642,
        643,
        644,
        646,
        648,
        649,
        650,
        651,
        652,
        653,
        654,
        655,
        656,
        657,
        658,
        660,
        661,
        663,
        664,
        665,
        666,
        667,
        668,
        670,
        672,
        673,
        674,
        675,
        676,
        677,
        678,
        680,
        682,
        683,
        684,
        685,
        686,
        687,
        688,
        691,
        692,
        693,
        694,
        695,
        696,
        697,
        702,
        703,
        704,
        705,
        706,
        708,
        709,
        713,
        714,
        718,
        719,
        720,
        721,
        722,
        723,
        725,
        726,
        727,
        728,
        729,
        731,
        732,
        733,
        734,
        735,
        736,
        738,
        739,
        743,
        744,
        746,
        747,
        749,
        750,
        752,
        753,
        754,
        755,
        756,
        757,
        758,
        760,
        761,
        762,
        764,
        766,
        767,
        768,
        769,
        770,
        771,
        773,
        774,
        775,
        777,
        778,
        780,
        783,
        784,
        785,
        786,
        787,
        788,
        790,
        791,
        792,
        793,
        794,
        795,
        797,
        798,
        799,
        800,
        801,
        803,
        804,
        805,
        807,
        808,
        810,
        811,
        812,
        813,
        814,
        816,
        817,
        818,
        819,
        821,
        822,
        824,
        825,
        826,
        827,
        828,
        830,
        831,
        832,
        833,
        834,
        836,
        837,
        838,
        840,
        841,
        842,
        843,
        844,
        845,
        846,
        847,
        848,
        850,
        851,
        852,
        854,
        855,
        856,
        858,
        859,
        860,
        861,
        863,
        864,
        865,
        866,
        868,
        869,
        870,
        873,
        874,
        875,
        876,
        877,
        878,
        880,
        881,
        882,
        883,
        884,
        885,
        886,
        888,
        890
      ],
      "Embarked": [
        61,
        829
      ]
    }
  }
}